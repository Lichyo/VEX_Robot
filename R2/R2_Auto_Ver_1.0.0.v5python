{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\nbrain=Brain()\ncontroller = Controller()\nvision_1__SIG_1 = Signature(1, -4789, -4193, -4492,-5041, -4557, -4800,3.9, 0)\nvision_1 = Vision(Ports.PORT1, 50, vision_1__SIG_1)\n\nleft_motor_a = Motor(Ports.PORT5, GearSetting.RATIO_18_1, False)\nleft_motor_b = Motor(Ports.PORT6, GearSetting.RATIO_18_1, False)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT7, GearSetting.RATIO_18_1, True)\nright_motor_b = Motor(Ports.PORT8, GearSetting.RATIO_18_1, True)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain_gps = Gps(Ports.PORT9, -160.00, 20.00, MM, 0)\ndriver = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_gps, 319.19, 320, 40, MM, 1)\n\nvision_1__SIG_1 = Signature(1, -4789, -4193, -4492,-5041, -4557, -4800,3.9, 0)\nvision = Vision(Ports.PORT1, 50, vision_1__SIG_1)\nstretch = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nthrow_1 = Motor(Ports.PORT4, GearSetting.RATIO_36_1, False)\nthrow_2 = Motor(Ports.PORT3, GearSetting.RATIO_36_1, True)\nthrow = MotorGroup(throw_1, throw_2)\n\nthrow.set_stopping(HOLD)\nthrow.set_velocity(25, PERCENT)\nstretch.set_velocity(90, PERCENT)\nstretch.set_stopping(COAST)\nglobal is_stretching\nglobal prepared\ndriver.set_drive_velocity(50, PERCENT)\ndriver.set_turn_velocity(30, PERCENT)\n\nglobal correct_angle_in_radian\nglobal a\nglobal b\nglobal c\nx0 = -1100\ny0 = 0\n\nprepared = False\nis_stretching = False\n\nclass Axis:\n    def __init__(self):\n        self.x0 = -1100\n        self.y0 = 0\n\n    def position(self): \n        self.x = drivetrain_gps.x_position(MM)\n        self.y = drivetrain_gps.y_position(MM)\n        self.head = drivetrain_gps.heading()\n        self.a = abs(self.x-x0)\n        self.c = abs(self.y-y0)\n        self.b = math.sqrt(math.pow(self.a,2)+math.pow(self.c,2))\n    \n    def set_quadrant(self):\n        self.position()\n        if self.x > 0:\n            if self.y > 0:\n                self.quadrant = 1\n            else:\n                self.quadrant = 4\n        else:\n            if self.y > 0:\n                self.quadrant = 2\n            else:\n                self.quadrant = 3\n\n    def info(self):\n        self.set_quadrant()\n        self.set_theta()\n        self.position()\n        brain.screen.clear_screen()\n        brain.screen.set_cursor(1, 1)\n        brain.screen.print('x: ',self.x)\n        brain.screen.next_row()\n        brain.screen.print('y: ',self.y)\n        brain.screen.next_row()\n        brain.screen.print('head: ',self.head)\n        brain.screen.next_row()\n        brain.screen.print('quadrant: ',self.quadrant)\n        brain.screen.next_row()\n        brain.screen.print('theta:' , self.theta)\n        brain.screen.next_row()\n        brain.screen.print('correct: ' , self.correct_angle_in_radian)\n        wait(0.3,SECONDS)\n\n    def set_theta(self):\n        self.set_quadrant\n        self.position()\n        cos = self.a/self.b\n        self.correct_angle_in_radian = math.acos(cos)\n        self.correct_angle_in_radian = math.degrees(self.correct_angle_in_radian)\n    \n        if self.quadrant == 1:\n            self.theta = 270 - self.correct_angle_in_radian\n        elif self.quadrant == 2:\n            self.theta = 270 - self.correct_angle_in_radian\n        elif self.quadrant == 3:\n            self.theta = 270 + self.correct_angle_in_radian\n        else:\n            self.theta = 270 + self.correct_angle_in_radian\n\n\ndef throw_prepare():\n    throw.spin_for(FORWARD, 170, DEGREES)\n\ndef stretch_prepare():\n    stretch.spin_for(FORWARD, 900, DEGREES)\n \ndef prepare():\n    global prepared\n    Thread(throw_prepare)\n    Thread(stretch_prepare)\n    prepared = True\n\ndef set_stop():\n    throw.stop()\n    stretch.stop()\n\ndef shoot():\n    global prepared\n    stretch.spin_for(REVERSE, 900, DEGREES)\n    throw.spin_for(FORWARD, 190, DEGREES)\n    prepared = False\n\nclass Movement:\n    def __init__():\n        pass\n\n    def forward():\n        Thread(lambda drive : driver.drive(FORWARD))\n\naxis = Axis()\n\nwhile True:\n    axis.info()\n    driver.turn_to_heading(axis.theta,DEGREES)\n    Thread(lambda drive : driver.drive(FORWARD))","textLanguage":"python","rconfig":[{"port":[1],"name":"vision_1","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":50,\"signatures\":[{\"name\":\"SIG_1\",\"parameters\":{\"uMin\":-4789,\"uMax\":-4193,\"uMean\":-4492,\"vMin\":-5041,\"vMax\":-4557,\"vMean\":-4800,\"rgb\":4877641,\"type\":0,\"name\":\"SIG_1\"},\"range\":3.9},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_2\"},\"range\":2.5},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22},{"port":[5,6,7,8,9],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"gps","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"160","xOffsetUnit":"mm","yOffset":"20","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.3","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}