{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\nclaw_drive_smart1 = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nclaw_drive_smart2 = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nclaw = DriveTrain(claw_drive_smart1, claw_drive_smart2,319.19, 295, 40, MM, 1)\nconveyor_drive_smart1 = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nconveyor_drive_smart2 = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nconveyor = DriveTrain(conveyor_drive_smart1, conveyor_drive_smart2,319.19, 295, 40, MM, 1)\ndef claw_forward():\n    claw.drive_for(FORWARD, 300, MM)\ndef claw_backward():\n    claw.drive_for(REVERSE, 300, MM)\ndef conveyor_forward():\n    conveyor.drive_for(FORWARD, 2000, MM)\ndef conveyor_backward():\n    conveyor.drive_for(REVERSE, 2000, MM)\n\nclaw_forward()\nwait(1,SECONDS)\nclaw_backward()\nwait(1,SECONDS)\nconveyor_forward()\nwait(1,SECONDS)\nconveyor_backward()\nwait(1,SECONDS)\n\n# drivetrain.drive_for(FORWARD, 1000, MM)\n# wait(0.2, SECONDS)\n# drivetrain.turn_for(LEFT, 67, DEGREES)\n# wait(0.2, SECONDS)\n# drivetrain.drive_for(FORWARD, 1000, MM)\n# wait(0.2, SECONDS)\n# drivetrain.turn_for(LEFT, 67, DEGREES)\n# wait(0.2, SECONDS)\n# drivetrain.drive_for(FORWARD, 1000, MM)\n# wait(0.2, SECONDS)\n# drivetrain.turn_for(LEFT, 67, DEGREES)\n# wait(0.2, SECONDS)\n# drivetrain.drive_for(FORWARD, 1000, MM)\n# wait(0.2, SECONDS)\n# drivetrain.turn_for(LEFT, 67, DEGREES)","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.1","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}