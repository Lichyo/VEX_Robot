{"mode":"Text","textContent":"from vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\nleft_wheel = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_wheel = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\ndriver = DriveTrain(left_wheel, right_wheel, 319.19, 295, 40, MM, 1)\ndrivertrain_gps = Gps(Ports.PORT5, 0.00, 200.00, MM, 180)\n\nx = 0\ny = 0\nhead = 0\ncount = 0\na = 0\nb = 0\nc = 0 \ncorrect_angle_in_radian = 0\ndef position():\n    global x\n    global y \n    global head\n    global correct_angle_in_radian\n    global a\n    global b\n    global c\n    x0 = 1100\n    y0 = 0\n    x = 0\n    y = -1100\n\n    x = drivertrain_gps.x_position(MM)\n    y = drivertrain_gps.y_position(MM)\n    a = abs(x-x0)\n    c = abs(y-y0)\n    b = math.sqrt(math.pow(a,2)+math.pow(c,2))\n    correct_angle_in_radian = theta() + head -270\n    brain.screen.print('you need to turn : ', correct_angle_in_radian)\n    brain.screen.set_cursor(1, 1)\n\ndef theta():\n    global a\n    global b\n    global c\n\n    cos = (pow(a, 2) + pow(b, 2) - pow(c, 2)) / (2 * a * b)\n    correct_angle_in_radian = math.acos(cos)\n    correct_angle_in_radian = math.degrees(correct_angle_in_radian)\n    return correct_angle_in_radian\n    \ndef checking_located_area():\n    position()\n    if y > 0 and x < 0:\n        return 2\n    elif y > 0 and x > 0:\n        return 1\n    elif y < 0 and x < 0:\n        return 3\n    else:\n        return 4","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.2","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}