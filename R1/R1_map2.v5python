{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n# vex-vision-config:begin\n# vex-vision-config:end\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\nbrain = Brain()\nleft_wheel = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_wheel = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\ndriver = DriveTrain(left_wheel, right_wheel, 319.19, 295, 40, MM, 1)\ngraper_motor = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\ngraper = DriveTrain(graper_motor, graper_motor, 319.19, 295, 40, MM, 1)\nvision_20__GREENBOX = Signature(1, -7455, -5605, -6530,-5343, -3375, -4358,3, 0)\nvision_20 = Vision(Ports.PORT20, 50, vision_20__GREENBOX)\n\n\ncheck_green = Event()\n\nvertical_count = 0\nhorizontal_count = 0\nw = 0\nh = 0\n# green_box_flag = False\n\n\ndef move_forward():\n    driver.drive_for(FORWARD,10,INCHES)\n# 18次\n\ndef turn_left():\n    driver.turn_for(LEFT,10)\n#6次\n\ndef turn_right():\n    driver.turn_for(RIGHT,10)\n\ndef move_backward():\n    driver.drive_for(REVERSE,10,INCHES)\n\n\ndef has_green_callback():\n    global vertical_count\n    global horizontal_count\n    global center_x\n    global w\n    global h\n    objects = vision_20.take_snapshot(0)\n    objects = vision_20.largest_object()\n    wait(0.1, SECONDS)\n    center_x = objects.centerX\n    # brain.screen.print(objects.centerX, precision = 6)\n    w = objects.width \n    h = objects.height\n    if w > 180 or h > 180:\n        graper.drive(REVERSE,150)\n        wait(1,SECONDS)\n        driver.stop()\n\n    else :\n        graper.drive(REVERSE,150)\n        if center_x < 130:\n            turn_left()\n            horizontal_count = horizontal_count -1\n            wait(0.1,SECONDS)\n            move_forward()\n            vertical_count = vertical_count + 1\n        elif center_x > 190:\n            turn_right()\n            horizontal_count = horizontal_count + 1\n            wait(0.1,SECONDS)\n            move_forward()\n            vertical_count = vertical_count + 1\n        else : \n            move_forward()\n            vertical_count = vertical_count + 1\n\ndef check_size():\n    # w = objects.width \n    # h = objects.height\n    # if w > 100 and h > 80:\n        # graper.stop()\n    # else :\n        # graper.drive(FORWARD,150)\n    pass\n\n\ncheck_green(has_green_callback)\n\ndef broadcasting():\n    check_green.broadcast_and_wait()\n\nwhile True:\n    broadcasting()\n    wait(0.3, SECONDS)\n    brain.screen.print(horizontal_count)\n    brain.screen.print(vertical_count)\n    if w > 180 or h > 180 :\n        break \n\nwhile vertical_count > 6 :\n    move_backward()\n    vertical_count = vertical_count - 1\n\nwhile vertical_count < 6 :\n    move_forward()\n    vertical_count = vertical_count + 1\n\nwhile horizontal_count > 8 :\n    turn_left()\n    horizontal_count = horizontal_count -1\n    \nwhile horizontal_count < 8 :\n    turn_right()\n    horizontal_count = horizontal_count +1\n\ngraper.drive(FORWARD,150)\n\n\n\n\n    \n    \n\n\n\n","textLanguage":"python","rconfig":[{"port":[1],"name":"vision_1","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":51,\"signatures\":[{\"name\":\"SIG_1\",\"parameters\":{\"uMin\":-7455,\"uMax\":-5605,\"uMean\":-6530,\"vMin\":-5343,\"vMax\":-3375,\"vMean\":-4358,\"rgb\":4420950,\"type\":0,\"name\":\"SIG_1\"},\"range\":3},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_2\"},\"range\":2.5},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":3.1},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":3.1}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.3","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}