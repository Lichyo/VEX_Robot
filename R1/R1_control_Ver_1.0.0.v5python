{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nleft_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nright_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\nbrain=Brain()\n\nleft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nleft_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nright_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndriver = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\n\n\n\naccepter = Motor(Ports.PORT7, GearSetting.RATIO_18_1, False)\narm = Motor(Ports.PORT8, GearSetting.RATIO_18_1, False)\ndriver_mode = False\n\n# wing1 = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\n# wing2 = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\n# wings = MotorGroup(wing1,wing2)\ndriver_mode = False\ncontroller = Controller()\ndriver.set_stopping(COAST)\nis_wing_open = False\n# wings.set_max_torque(80, PERCENT)\n# wings.set_velocity(50,PERCENT)\n# wings.set_max_torque(80,PERCENT)\n# wings.set_timeout(3,SECONDS)\n\n\nleft_drive_smart.spin_for(REVERSE, 1000, DEGREES)\nright_drive_smart.spin_for(REVERSE, 1000, DEGREES)\n# right_motor_a.spin_for(REVERSE, 1000, DEGREES)\n# right_motor_b.spin_for(REVERSE, 1000, DEGREES)\n# while True:\n\n#     # if controller.buttonA.pressing():\n#     #     driver_mode = not driver_mode\n#     #     driver.set_drive_velocity(100, PERCENT)\n#     # else:\n#     #     driver.set_drive_velocity(60, PERCENT)\n    \n    \n#     axis_horizontal = controller.axis4.position()\n#     axis_vertical = controller.axis3.position()\n\n#     brain.screen.clear_screen()\n#     brain.screen.set_cursor(1,1)\n#     brain.screen.print('axis_horizontal: ',axis_horizontal)\n#     brain.screen.next_row()\n#     brain.screen.print('axis_vertical: ',axis_vertical)\n#     brain.screen.next_row()\n#     # wait(0.5, SECONDS)\n#     if axis_horizontal > 10:\n#         driver.turn(RIGHT)\n#     elif axis_horizontal < -10:\n#         driver.turn(LEFT)\n#     elif axis_vertical > 15:\n#         driver.drive(FORWARD)\n#     elif axis_vertical < -15:\n#         driver.drive(REVERSE)\n#     else:\n#         driver.stop()\n\n#     # if controller.buttonL1.pressing() and not is_wing_open:\n#     #     wings.spin_for(FORWARD,200,DEGREES)\n#     #     is_wing_open = True\n#     # elif controller.buttonL2.pressing() and is_wing_open:\n#     #     wings.spin_for(REVERSE,200,DEGREES)\n#     #     is_wing_open = False\n#     # else:\n#     #     wings.stop()","textLanguage":"python","rconfig":[{"port":[1,2,3,4,null],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.3","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}